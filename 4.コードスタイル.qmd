---
title: "3.コードスタイル"
date: "2024-10-01"
execute: 
  error: true
  cache: true
format:
  html: 
    slide-level: 2
    toc: true
---

# 目的
tidyverseスタイルガイドから、正しいコーディングスタイルを学びます。  

### 準備
- dplyer（ディープライ）パッケージ: ggplot2と同様、tidyverseのコアメンバー
- nycflights13: 2013年にニューヨーク市を出発した336,776便のフライトについてのデータセット
```{r}
library(nycflights13)
library(tidyverse)
```

# 1.名前
変数の名前は英小文字、数字、_（アンダーバー）のみを使用します。  

また、名前内の単語の区切りは_を使用します。
名前は、長くても理解しやすい方がよいと考えられています。

# 2.スペース
^以外の算術演算子の両端と代入演算子の前後にはスペースを入れます。

また、カンマの後にもスペースを入れます。

# 3.パイプ
|>は前にスペースを入れ、行の最後に置きます。  
また、パイプラインの最初のステップの後、各行を２つのスペースでインデントします。

パイプ先に名前付きの引数がある場合は、引数を新しい行に配置します。  
関数に名前付きの引数がない場合は、すべて１行にします。

```markdown
flights |> # 以降の行はスペース２つでインデント
  group_by(tailnum) |>
  summarize(
    delay = mean(arr_delay, na.rm = TRUE),
    n = N() # 新しい行に配置
  )
```

パイプラインが1行に収まる場合は、規則を省略しても問題ないです。
```markdown
# １行に収める場合
df |> mutate(y = x + 1)

# 規則に従う場合
df |>
  mutate(
    y = x + 1
  )

```

